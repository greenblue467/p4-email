{"version":3,"sources":["components/Mail.jsx","components/Inbox.jsx","components/One.jsx","components/Sent.jsx","components/Nav.jsx","components/Details.jsx","components/Pagination.jsx","App.js","serviceWorker.js","index.js"],"names":["Mail","props","unreadStyle","fontWeight","mail","unread","className","style","onClick","open","id","name","Inbox","read","first","last","total","map","x","key","One","sentBox","email","title","content","Sent","Nav","popAdd","display","pop","popAdd2","pop2","Fragment","close","add","onSubmit","send","type","value","cont1","onChange","change1","required","cont0","change0","cont","change","cancel","sure","Details","back","past","forward","article","Pagination","page","i","active","color","currentPage","borderBottom","push","changePage","numberOfPages","prev","next","App","state","isLoading","isReading","url","numberPerPage","thisNum","isAdding","div1","setState","div2","indexOfLast","indexOfFirst","newArray","unreadLength","filter","length","e","index","findIndex","newArticle","body","target","preventDefault","addNewCont","a","b","newMail","Date","now","fetch","method","headers","Headers","JSON","stringify","then","res","json","data","console","log","newPage","sentBoxLength","this","borderLeft","Math","ceil","onePage","slice","basename","to","path","exact","render","Component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5e726638.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Mail = props => {\n  const unreadStyle = {\n    fontWeight: props.mail.unread && \"bold\"\n  };\n  return (\n    <div\n      className=\"oneMail\"\n      style={unreadStyle}\n      onClick={() => props.open(props.mail.id)}\n    >\n      {props.mail.name}\n    </div>\n  );\n};\nexport default Mail;\n","import React from \"react\";\nimport Mail from \"./Mail\";\n\nconst Inbox = props => {\n  return (\n    <div>\n      <div className=\"readStyle\" onClick={props.read}>\n        全部已讀\n      </div>\n      <div className=\"pageNum\">\n        {props.first + 1} - {props.last} of {props.total}\n      </div>\n\n      <div className=\"mailStyle\">\n        {props.mail.map(x => (\n          <Mail key={x.id} mail={x} open={() => props.open(x.id)} />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Inbox;\n","import React from \"react\";\n\nconst One = props => {\n  return (\n    <div className=\"mailbox\">\n      <div>\n        <span>收件人：</span>\n        {props.sentBox.email}\n      </div>\n      <div>\n        <span>主旨：</span>\n        {props.sentBox.title}\n      </div>\n      <div className=\"textArea\">{props.sentBox.content}</div>\n    </div>\n  );\n};\nexport default One;\n","import React, { Component } from \"react\";\nimport One from \"./One\";\n\nconst Sent = props => {\n  return (\n    <div className=\"outbox\">\n      {props.sentBox.map(x => (\n        <One key={x.id} sentBox={x} />\n      ))}\n    </div>\n  );\n};\nexport default Sent;\n","import React, { Component } from \"react\";\n\nconst Nav = props => {\n  const popAdd = {\n    display: props.pop && \"block\"\n  };\n  const popAdd2 = {\n    display: props.pop2 && \"block\"\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"shield\" style={popAdd} onClick={props.close}></div>\n      <h1 className=\"text\">Email</h1>\n      <div className=\"newmail\" onClick={props.add}>\n        +&ensp;撰寫新郵件\n      </div>\n      <div className=\"pop\" style={popAdd}>\n        <div onClick={props.close} className=\"close\">\n          X\n        </div>\n        <form onSubmit={props.send}>\n          <div>\n            <span>收件者：</span>\n            <input\n              type=\"email\"\n              value={props.cont1}\n              onChange={props.change1}\n              required\n            />\n          </div>\n          <div>\n            <span>主旨：</span>{\" \"}\n            <input type=\"text\" value={props.cont0} onChange={props.change0} />\n          </div>\n          <div>\n            <textarea value={props.cont} onChange={props.change} />\n          </div>\n\n          <input type=\"submit\" className=\"btn\" value=\"送出\" />\n        </form>\n      </div>\n      <div style={popAdd2} className=\"pop2\">\n        <div>是否放棄編輯？</div>\n        <button onClick={props.cancel}>取消</button>\n        <button onClick={props.sure}>確定</button>\n      </div>\n    </React.Fragment>\n  );\n};\nexport default Nav;\n","import React from \"react\";\n\nconst Details = props => {\n  return (\n    <div>\n      <div className=\"back\" onClick={props.back}>\n        &larr;&nbsp; 返回\n      </div>\n      <span className=\"mail\">\n        <li onClick={props.past}>＜&emsp;</li>\n        <li onClick={props.forward}>&emsp;＞</li>\n      </span>\n      <div className=\"detailStyle\">{props.article}</div>\n    </div>\n  );\n};\nexport default Details;\n","import React from \"react\";\n\nconst Pagination = props => {\n  const page = [];\n  for (let i = 1; i <= props.numberOfPages; i++) {\n    const active = {\n      color: props.currentPage == i && \"rgb(21, 186, 245)\",\n      fontWeight: props.currentPage == i && \"bold\",\n      borderBottom: props.currentPage == i && \"0.3rem solid rgb(21, 186, 245)\"\n    };\n    page.push(\n      <li key={i} style={active} onClick={() => props.changePage(i)}>\n        {i}\n      </li>\n    );\n  }\n  return (\n    <ul className=\"pageStyle\">\n      {props.currentPage > 1 && <li onClick={props.prev}>＜</li>}\n      {page}\n      {props.currentPage < props.numberOfPages && (\n        <li onClick={props.next}>＞</li>\n      )}\n    </ul>\n  );\n};\nexport default Pagination;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Link, BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Inbox from \"./components/Inbox\";\nimport Sent from \"./components/Sent\";\nimport Nav from \"./components/Nav\";\nimport Details from \"./components/Details\";\nimport Pagination from \"./components/Pagination\";\nimport style from \"./components/styles/style.css\";\n\nclass App extends Component {\n  state = {\n    mail: [],\n    isLoading: false,\n    isReading: false,\n    url: \"http://localhost:3000/\",\n    article: \"\",\n    pop: false,\n    pop2: false,\n    currentPage: 1,\n    total: 0,\n    numberPerPage: 20,\n    thisNum: 0,\n    sentBox: [\n      {\n        id: 1,\n        email: \"123@hotmail.com\",\n        title: \"123\",\n        content:\n          \"Tavelling alteration impression six all uncommonly. Chamber hearing inhabit joy highest private ask him our believe. Up nature valley do warmly. Entered of cordial do on no hearted. Yet agreed whence and unable limits. Use off him gay abilities concluded immediate allowance. Too cultivated use solicitude frequently. Dashwood likewise up consider continue entrance ladyship oh. Wrong guest given purse power is no. Friendship to connection an am considered difficulty. Country met pursuit lasting moments why calling certain the. Middletons boisterous our way understood law. Among state cease how and sight since shall. Material did pleasure breeding our humanity she contempt had. So ye really mutual no cousin piqued summer result.\"\n      },\n      {\n        id: 2,\n        email: \"xyz@hormail.xom\",\n        title: \"xyz\",\n        content:\n          \"在平面設計的過程中，常常會用一些無意義的假文（pseudo text）填充版面。目的是讓觀看者專注檢視排版效果，不會因為理解文句而分心。英文排版使用的假文通常由看起來像拉丁文的假詞組成，一般稱為 Lorem Ipsum。那麼，中文呢？我寫了個中文假文產生器（Chinese “Lorem Ipsum” Text Generator），可以產生由一般讀者認不得的中文字組成的假文。 這個中文假文產生器每次會產生由五個段落、每段六至八個假句組成的假文。所以，假句其實是假文的基礎。為了讓假句在視覺質地上接近真句，我準備了一個由 128 個真句組成的語料庫。每次要產生假句時就從中隨機挑選一個，然後逐字替換為隨機選出的筆畫數相同、但一般人不可能認得的低頻字。因為一般人不可能認得，實際上也算是假字了。\"\n      }\n    ],\n    cont: \"\",\n    cont0: \"\",\n    cont1: \"\",\n    isAdding: false\n  };\n  componentDidMount() {\n    this.setState({ isLoading: true });\n    fetch(\"https://jsonplaceholder.typicode.com/comments?_limit=100\")\n      .then(res => res.json())\n      .then(data => {\n        const content = data;\n        content.map(x => {\n          x.unread = true;\n          return x;\n        });\n        this.setState({\n          isLoading: false,\n          mail: content,\n          total: content.length\n        });\n      });\n  }\n  div1 = () => {\n    this.setState({ url: \"http://localhost:3000/\" });\n  };\n  div2 = () => {\n    this.setState({ url: \"http://localhost:3000/sent\" });\n  };\n  read = () => {\n    const indexOfLast = this.state.currentPage * this.state.numberPerPage;\n    const indexOfFirst = indexOfLast - this.state.numberPerPage;\n    const newArray = [...this.state.mail];\n    for (let i = indexOfFirst; i < indexOfLast; i++) {\n      newArray[i].unread = false;\n    }\n    this.setState({ mail: newArray });\n  };\n  unreadLength = () => {\n    const newArray = [...this.state.mail];\n    const newState = newArray.filter(x => x.unread == true);\n    return newState.length;\n  };\n  open = e => {\n    const newArray = [...this.state.mail];\n    const index = newArray.findIndex(x => x.id == e);\n    newArray[index].unread = false;\n    const newArticle = newArray[index].body;\n    this.setState({\n      mail: newArray,\n      isReading: true,\n      article: newArticle,\n      thisNum: e\n    });\n  };\n  back = () => {\n    this.setState({ isReading: false });\n  };\n  add = () => {\n    this.setState({ pop: true });\n  };\n  change = e => {\n    this.setState({ cont: e.target.value });\n  };\n  change0 = e => {\n    this.setState({ cont0: e.target.value });\n  };\n  change1 = e => {\n    this.setState({ cont1: e.target.value });\n  };\n  send = e => {\n    e.preventDefault();\n    this.addNewCont(this.state.cont, this.state.cont0, this.state.cont1);\n    this.setState({ pop: false, cont: \"\", cont0: \"\", cont1: \"\" });\n  };\n  addNewCont = (e, a, b) => {\n    this.setState({ isAdding: true });\n    const newMail = {\n      id: Date.now(),\n      email: b,\n      title: a,\n      content: e\n    };\n    fetch(\"https://jsonplaceholder.typicode.com/comments\", {\n      method: \"POST\",\n      headers: new Headers({\n        \"Content-Type\": \"application/json\"\n      }),\n      body: JSON.stringify(newMail)\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        const newItem = data;\n        const newArray = [data, ...this.state.sentBox];\n        this.setState({ sentBox: newArray, isAdding: false });\n      });\n    /*const newMail = {\n      id: Date.now(),\n      email: b,\n      title: a,\n      content: e\n    };\n    const newArray = [...this.state.sentBox, newMail];\n    this.setState({ sentBox: newArray,isLoading: false });*/\n  };\n  close = () => {\n    this.setState({ pop2: true });\n  };\n  sure = () => {\n    this.setState({ pop: false, pop2: false });\n  };\n  cancel = () => {\n    this.setState({ pop2: false });\n  };\n  changePage = e => {\n    this.setState({ currentPage: e });\n  };\n  prev = () => {\n    const newPage = this.state.currentPage - 1;\n    this.setState({ currentPage: newPage });\n  };\n  next = () => {\n    const newPage = this.state.currentPage + 1;\n    this.setState({ currentPage: newPage });\n  };\n  past = () => {\n    if (this.state.thisNum > 1) {\n      const index = this.state.thisNum - 1;\n      const newArray = [...this.state.mail];\n      newArray[index - 1].unread = false;\n      const newArticle = newArray[index - 1].body;\n      this.setState({\n        mail: newArray,\n        article: newArticle,\n        thisNum: this.state.thisNum - 1\n      });\n    }\n  };\n  forward = () => {\n    if (this.state.thisNum < this.state.total) {\n      const index = this.state.thisNum + 1;\n      const newArray = [...this.state.mail];\n      newArray[index - 1].unread = false;\n      const newArticle = newArray[index - 1].body;\n      this.setState({\n        mail: newArray,\n        article: newArticle,\n        thisNum: this.state.thisNum + 1\n      });\n    }\n  };\n  sentBoxLength = () => {\n    const newArray = [...this.state.sentBox];\n    const length = newArray.length;\n    return length;\n  };\n  render() {\n    console.log(this.state.url);\n    const div1 = {\n      borderLeft:\n        this.state.url == \"http://localhost:3000/\" &&\n        \"0.5rem solid  rgb(21, 186, 245)\",\n      color: this.state.url == \"http://localhost:3000/\" && \"rgb(21, 186, 245)\",\n      fontWeight: this.state.url == \"http://localhost:3000/\" && \"bold\"\n    };\n    const div2 = {\n      borderLeft:\n        this.state.url == \"http://localhost:3000/sent\" &&\n        \"0.5rem solid  rgb(21, 186, 245)\",\n      color:\n        this.state.url == \"http://localhost:3000/sent\" && \"rgb(21, 186, 245)\",\n      fontWeight: this.state.url == \"http://localhost:3000/sent\" && \"bold\"\n    };\n    const numberOfPages = Math.ceil(\n      this.state.total / this.state.numberPerPage\n    );\n    const indexOfLast = this.state.currentPage * this.state.numberPerPage;\n    const indexOfFirst = indexOfLast - this.state.numberPerPage;\n    const onePage = this.state.mail.slice(indexOfFirst, indexOfLast);\n    return (\n      <React.Fragment>\n        <div className=\"one\">\n          <Nav\n            add={this.add}\n            pop={this.state.pop}\n            pop2={this.state.pop2}\n            send={this.send}\n            close={this.close}\n            sure={this.sure}\n            cancel={this.cancel}\n            cont={this.state.cont}\n            change={this.change}\n            cont0={this.state.cont0}\n            change0={this.change0}\n            cont1={this.state.cont1}\n            change1={this.change1}\n          />\n        </div>\n        <Router basename=\"/p4-email\">\n          <div className=\"two\">\n            <div className=\"div1\">\n              <Link to=\"/\" className=\"inbox\" onClick={this.div1} style={div1}>\n                收件匣 ({this.unreadLength()})\n              </Link>\n            </div>\n            <div className=\"div2\">\n              <Link\n                to=\"/sent\"\n                className=\"sent\"\n                onClick={this.div2}\n                style={div2}\n              >\n                寄件備份 ({this.sentBoxLength()})\n              </Link>\n            </div>\n          </div>\n          {this.state.isLoading ? (\n            <div className=\"loadingText\">載入中，請稍候...</div>\n          ) : (\n            <div className=\"three\">\n              {this.state.isReading ? (\n                <Details\n                  article={this.state.article}\n                  back={this.back}\n                  past={this.past}\n                  forward={this.forward}\n                  mail={this.state.mail}\n                />\n              ) : (\n                <Switch>\n                  <Route path=\"/email\" exact />\n                  <Route\n                    path=\"/\"\n                    exact\n                    render={props => (\n                      <div>\n                        <Inbox\n                          {...props}\n                          mail={onePage}\n                          read={this.read}\n                          open={this.open}\n                          total={this.state.total}\n                          first={indexOfFirst}\n                          last={indexOfLast}\n                        />\n                        <Pagination\n                          currentPage={this.state.currentPage}\n                          numberOfPages={numberOfPages}\n                          changePage={this.changePage}\n                          prev={this.prev}\n                          next={this.next}\n                        />\n                      </div>\n                    )}\n                  />\n                  {this.state.isAdding ? (\n                    <div className=\"loadingText\">傳送中，請稍候...</div>\n                  ) : (\n                    <Route\n                      path=\"/sent\"\n                      render={props => <Sent sentBox={this.state.sentBox} />}\n                    />\n                  )}\n                </Switch>\n              )}\n            </div>\n          )}\n        </Router>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}